{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww28600\viewh15280\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
/**\
 \
  this is a only a simple server example, which can display the HTTP requests form browser and \
 send the sample HTTP response back to the browser.\
(Please note, for simplicity, the HTTP response has nothing to do wiht the HTTP request. Please do not do it in your project)\
 How to test:\
type "http://127.0.0.1:5555/gaia.cs.umass.edu/wireshark-labs/alice.txt" to the address field of the web browser.\
 the browser will show the HTTP response;\
  the server shall  show the HTTP Reqeust and HTTP Respnse;\
 \
 This simple server tested with google chrome as the client.\
 This sample is provided hoping to give you some idea to start the program.\
 */\
\
\
import java.io.BufferedReader;\
import java.io.DataInputStream;\
import java.io.DataOutputStream;\
\
import java.io.IOException;\
import java.io.InputStreamReader;\
import java.net.ServerSocket;\
import java.net.Socket;\
import java.util.Date;\
public class ServerExample \{	\
	final static String CRLF = "\\r\\n";\
\
	public static void main(String[] args) \{\
		// TODO Auto-generated method stub\
	\
				\
		try \
		\{\
			ServerSocket myServer=new ServerSocket(5555);			// welcoming socket		\
		\
			 while(true)			\
			  \{\
				 \
				 \
				//Listening for a TCP connection request.\
				Socket connectionsocket=myServer.accept();\
				\
				DataInputStream input=new DataInputStream(connectionsocket.getInputStream());\
			 \
				BufferedReader bufferRead = new BufferedReader(new InputStreamReader(input));\
				\
			\
				\
				 char buffer[]=new char[2048];				\
				\
				\
				int len= bufferRead.read(buffer, 0, 2048);  // read http request\
				String request=ServerExample.charArrayToString(buffer, len);\
				\
				\
				 //Display the HTTP Request from the web browser\
				 System.out.println("HTTP Request:");\
				 System.out.println(request);\
				 \
				//Create HTTP Response\
				// in fact, HTTP response should be created based on the requested object.\
				// but here, for the simplicity, I only give a simple HTTP Respsone example, which has nothing to do with the requested object.\
				long time = System.currentTimeMillis();\
				Date date = new Date(time);\
				\
				String httpResponse="HTTP/1.1 200 OK\\r\\n" + \
						"Date: "+date+"\\r\\n" + \
						"Server: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16 mod_perl/2.0.10 Perl/v5.16.3\\r\\n" + \
						"Last-Modified: Sat, 21 Aug 2004 14:21:11 GMT\\r\\n" + \
						"ETag: \\"2524a-3e22aba3a03c0\\"\\r\\n" + \
						"Accept-Ranges: bytes\\r\\n" + \
						"Content-Length: 27\\r\\n" + \
						"Keep-Alive: timeout=5, max=100\\r\\n" + \
						"Connection: Keep-Alive\\r\\n" + \
						"Content-Type: text/plain; charset=UTF-8\\r\\n" + \
						"\\r\\n" + \
						"I am a simple HTTP response";\
						\
						\
						\
				DataOutputStream output=new DataOutputStream(connectionsocket.getOutputStream());\
				output.writeBytes(httpResponse);\
				output.flush();\
			\
				System.out.println("HTTP Response:");\
				System.out.println(httpResponse);\
				\
			  \}\
			 \
		\}catch(IOException ioe) \
		\{\
			ioe.printStackTrace();\
		\}		\
	\
		\
		\
	\}\
	\
	\
	\
	\
	public static String charArrayToString(char[] charArray, int length)\
	\{ String result="";\
		for(int i=0;i<length;i++)\
		\{\
			result+=charArray[i];\
		\}\
		return result;\
	\}\
	\
	\
	\}\
\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \kerning1\expnd0\expndtw0 Server Created\
HTTP Request:\
GET /gaia.cs.umass.edu/wireshark-labs/alice.txt HTTP/1.1\
Host: 127.0.0.1:5555\
Connection: keep-alive\
Cache-Control: max-age=0\
Upgrade-Insecure-Requests: 1\
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\
Accept-Encoding: gzip, deflate, br\
Accept-Language: en-US,en;q=0.9\
Range: bytes=148540-148540\
If-Range: "2524a-3e22aba3a03c0"
\f0 \cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
\
\
\
\
\
}